var C=Object.defineProperty;var p=(n,t,s)=>t in n?C(n,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):n[t]=s;var l=(n,t,s)=>(p(n,typeof t!="symbol"?t+"":t,s),s),h=(n,t,s)=>{if(!t.has(n))throw TypeError("Cannot "+s)};var _=(n,t,s)=>(h(n,t,"read from private field"),s?s.call(n):t.get(n)),o=(n,t,s)=>{if(t.has(n))throw TypeError("Cannot add the same private member more than once");t instanceof WeakSet?t.add(n):t.set(n,s)},c=(n,t,s,i)=>(h(n,t,"write to private field"),i?i.call(n,s):t.set(n,s),s);class g{constructor(t=5){l(this,"_parallelCount");l(this,"_runingCount",0);l(this,"tasks",[]);this._parallelCount=t}add(t){const s=new Promise((i,e)=>{this.tasks.push({task:t,resolve:i,reject:e})});return this._run(),s}_run(){for(;this.tasks.length>this._runingCount&&this._runingCount<this._parallelCount;){const{task:t,resolve:s,reject:i}=this.tasks[this._runingCount];this._runingCount++,t().then(e=>s(e)).catch(e=>i(e)).finally(()=>{this._continue()})}}_continue(){this._parallelCount++,this._run()}}var u;class x extends g{constructor(s,i=!1){s.forEach((e,a,r)=>{a!==0&&(r[a]=e+r[a-1])});super();l(this,"_parallelCountList");l(this,"_parallelListIndex",0);l(this,"_executeCount",0);l(this,"_isAwait");o(this,u,null);this._parallelCountList=s,this._isAwait=i,c(this,u,this._run),this._run=()=>{this._parallelCount=this._parallelCountList[this._parallelListIndex],_(this,u).call(this)}}_continue(){if(this._executeCount++,this._isAwait){if(this._executeCount===this._parallelCount){this._parallelListIndex++,this._run();return}}else this._runingCount===this._parallelCount&&(this._parallelListIndex++,this._run());this._parallelCount++,this._run()}}u=new WeakMap;export{x as T,g as a};
