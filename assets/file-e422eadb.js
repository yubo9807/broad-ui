function L(c){const s=new FileReader;return new Promise((d,o)=>{s.readAsDataURL(c),s.addEventListener("load",l=>{d(l.target.result)})})}async function v(c,s={}){const d=c.match(/image\/.+;/)[0].slice(6,-1).toLocaleLowerCase();s=Object.assign({ratio:.8,sizeLimit:{width:800,height:800}},s);const o=new Image;return o.src=c,new Promise((l,u)=>{o.addEventListener("load",async w=>{const{naturalWidth:a,naturalHeight:i}=o;let e=0,t=0,n=0;const{sizeLimit:m}=s;m?(e=m.width,t=m.height,a>i&&(a>e?(n=a/e,t=i/n):(n=i/t,e=a/n)),i>a&&(i>t?(n=i/t,e=a/n):(n=a/e,t=i/n)),a<e&&i<t&&(e=a,t=i)):(e=a,t=i);const r=document.createElement("canvas");r.width=e,r.height=t,r.style.visibility="hidden",document.body.appendChild(r);const h=r.getContext("2d");h.clearRect(0,0,e,t),h.drawImage(o,0,0,e,t);const g=r.toDataURL(`image/${d}`,s.ratio),f=c.length>g.length?g:c;return r.remove(),l(f)})})}export{L as f,v as i};
