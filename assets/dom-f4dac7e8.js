function f(e){const s=new FileReader;return new Promise((d,r)=>{s.readAsDataURL(e),s.addEventListener("load",l=>{d(l.target.result)})})}async function w(e,s={}){const d=e.match(/image\/.+;/)[0].slice(6,-1).toLocaleLowerCase();s=Object.assign({ratio:.8,sizeLimit:{width:800,height:800}},s);const r=new Image;return r.src=e,new Promise((l,L)=>{r.addEventListener("load",async p=>{const{naturalWidth:i,naturalHeight:a}=r;let t=0,n=0,c=0;const{sizeLimit:m}=s;m?(t=m.width,n=m.height,i>a&&(i>t?(c=i/t,n=a/c):(c=a/n,t=i/c)),a>i&&(a>n?(c=a/n,t=i/c):(c=i/t,n=a/c)),i<t&&a<n&&(t=i,n=a)):(t=i,n=a);const o=document.createElement("canvas");o.width=t,o.height=n,o.style.visibility="hidden",document.body.appendChild(o);const h=o.getContext("2d");h.clearRect(0,0,t,n),h.drawImage(r,0,0,t,n);const g=o.toDataURL(`image/${d}`,s.ratio),u=e.length>g.length?g:e;return o.remove(),l(u)})})}const y=()=>{const e=document.createElement("input");e.type="file",e.accept="image/*",e.addEventListener("input",async()=>{const s=e.files[0],d=await f(s),r=await w(d,{ratio:.6,sizeLimit:{width:20,height:20}});alert("压缩前："+d.length+`
压缩后：`+r.length)}),document.getElementById("container").appendChild(e)};export{y as default};
