var f=(r,t,s)=>{if(!t.has(r))throw TypeError("Cannot "+s)};var i=(r,t,s)=>(f(r,t,"read from private field"),s?s.call(r):t.get(r)),l=(r,t,s)=>{if(t.has(r))throw TypeError("Cannot add the same private member more than once");t instanceof WeakSet?t.add(r):t.set(r,s)};const{warn:h}=console;var e;class u{constructor(){l(this,e,new Map)}on(t,s){i(this,e).has(t)&&h(`${t} already exists`),i(this,e).set(t,{fn:s})}once(t,s){if(i(this,e).has(t)){h(`${t} already exists`);return}i(this,e).set(t,{fn:s,once:!0})}emit(t,...s){const o=i(this,e).get(t);if(!o){h(`no implementation for ${t}`);return}const c=o.fn(...s);return o.once&&i(this,e).delete(t),c}off(t){i(this,e).delete(t)}offAll(){i(this,e).clear()}reset(t,s,o=!1){if(!i(this,e).has(t)){h(`${t} not exists`);return}i(this,e).set(t,{fn:s,once:o})}}e=new WeakMap;export{u as P};
